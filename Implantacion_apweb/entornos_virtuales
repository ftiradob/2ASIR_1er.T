Instalar:
sudo apt install python3-venv

Crear entorno virtual:

python3 -m venv django

Activar entorno virtual:

source django/bin/activate

Desactivar entorno virtual:

deactivate

Dentro del entorno virtual instalamos:

pip install django

Para llevarlo al entorno de produccion:

pip freeze > requirements.txt (en entorno de desarrollo)
pip install -r requirements.txt (en entorno de produccion)


Una vez configurado todo:

django-admin startproject mysite

Iniciamos el servidor:

python manage.py runserver

python manage.py runserver 0.0.0.0:8000 (si no pones nada

Crear superusuario:

python manage.py createsuperuser

python manage.py startapp polls

TAREA 1

1.

Clonamos el repositorio:

ftirado@nazo:~/python_app$ git clone https://github.com/josedom24/django_tutorial.git

2.

Creamos el entorno virtual:

ftirado@nazo:~/venv$ python3 -m venv django

Instalamos las dependencias:

(django) ftirado@nazo:~/python_app/django_tutorial$ pip install -r requirements.txt

3.

Comprobamos que estamos haciendo uso de sqlite3:

(django) ftirado@nazo:~/python_app/django_tutorial/django_tutorial$ cat settings.py

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

Nuestra base de datos se llama "db.sqlite3".

4.

Creamos la base de datos:

(django) ftirado@nazo:~/python_app/django_tutorial$ python3 manage.py migrate

Operations to perform:
  Apply all migrations: admin, auth, contenttypes, polls, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying polls.0001_initial... OK
  Applying sessions.0001_initial... OK

5.

Creamos el super usuario:

(django) ftirado@nazo:~/python_app/django_tutorial$ python3 manage.py createsuperuser
Nombre de usuario (leave blank to use 'ftirado'): 
Dirección de correo electrónico: fernando.tb.95@gmail.com
Password: 
Password (again): 
Esta contraseña es demasiado corta. Debe contener al menos 8 caracteres.
Bypass password validation and create user anyway? [y/N]: y
Superuser created successfully.

6.

Ejecutamos el servidor web de desarrollo:

(django) ftirado@nazo:~/python_app/django_tutorial$ python manage.py runserver

Accedemos y comprobamos que los datos han sido añadidos correctamente:

!djangotuto.png!

7.

Creamos las preguntas con sus respectivas respuestas:

!2pre1.png!


!2pre2.png!

8.

Comprobamos que funciona:

!preguntapy.png!


!respuestapy.png!

TAREA 2

1.

Instalamos apache2 y los módulos necesarios:

debian@asda:~$ sudo apt install apache2
debian@asda:~$ sudo apt install libapache2-mod-python
debian@asda:~$ sudo apt install libapache2-mod-wsgi-py3

2.

Clonamos el repositorio en nuestro DocumentRoot:

debian@asda:/var/www/html/django_tutorial$ sudo git clone https://github.com/josedom24/django_tutorial.git

3.

Instalamos:

debian@asda:~$ sudo apt install python3-pip

debian@asda:~$ sudo pip3 install -r requirements.txt

4.

Configuramos el virtualhost:

debian@asda:/etc/apache2/sites-available$ sudo nano fernando.conf 
<VirtualHost *:80>

	ServerAdmin webmaster@localhost
	DocumentRoot /var/www/html/django_tutorial
	
	ServerName www.fernandotirado.com
	WSGIDaemonProcess django user=www-data group=www-data processes=5 python-path=/var/www/html/django_tutorial
	WSGIScriptAlias / /var/www/html/django_tutorial/django_tutorial/wsgi.py
	
	Alias "/static/admin/" "/usr/local/lib/python3.7/dist-packages/django/contrib/admin/static/admin/"
	<Directory /usr/local/lib/python3.7/dist-packages/django/contrib/admin/static/admin/>
		Options +FollowSymLinks
		Require all granted
	</Directory>

	<Directory /var/www/html/django_tutorial/django_tutorial>
		WSGIProcessGroup django
		WSGIApplicationGroup %{GLOBAL}
		Require all granted
	</Directory>
	

	ErrorLog ${APACHE_LOG_DIR}/error.log
	CustomLog ${APACHE_LOG_DIR}/access.log combined

</VirtualHost>

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet

Ahora lo activamos:

debian@asda:~$ sudo a2ensite fernando.conf

5.

Creamos la base de datos:

debian@asda:/var/www/html/django_tutorial$ sudo python3 manage.py migrate

6.

Creamos el usuario administrador:

debian@asda:/var/www/html/django_tutorial$ sudo python3 manage.py createsuperuser
Nombre de usuario (leave blank to use 'root'): ftirado
Dirección de correo electrónico: fernando.tb.95@gmail.com
Password: 
Password (again): 
Esta contraseña es demasiado corta. Debe contener al menos 8 caracteres.
Bypass password validation and create user anyway? [y/N]: y
Superuser created successfully.

7.

Desactivamos el DEBUG:

debian@asda:/var/www/html/django_tutorial/django_tutorial$ sudo nano settings.py
DEBUG = False

8.

Probamos:

!djangoformulario.png!
